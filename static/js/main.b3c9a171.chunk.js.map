{"version":3,"sources":["pages/Room.js","service/api.js","components/LoginHeader.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["EnxRtc","window","EnxWb","Room","props","localStream","optionsLocal","remoteOptions","player_options","toolbar","token","useParams","ATList","audio_muted","video_muted","room","SubscribedStreamMap","Map","config","video","audio","data","videoSize","player","height","width","minHeight","minWidth","displayMode","resizer","useEffect","joinRoom","enableMuteButton","muteUnmuteBtn","removeAttribute","style","cursor","pointerEvents","console","log","document","querySelector","classList","add","Logger","setLogLevel","success","error","innerHTML","message","play","me","role","ownId","publishId","i","streams","length","subscribe","addEventListener","event","JSON","stringify","video_player_len","childNodes","activeList","innerText","size","stream","remoteStreams","getAll","st","j","streamId","getID","name","clientId","stream_id","get","border","display","streamEvent","set","location","href","e","mute","unmuteAudio","arg","remove","muteAudio","wb","canvasId","initialWidth","initialHeight","scheme","custom","bgColor","toolbarBGColor","brushColor","icon","type","BGColor","FGColor","create","startStreaming","startCollaboration","shareWith","disconnect","disabled","setAttribute","unmuteVideo","res","result","muteVideo","className","id","src","alt","title","fetchOptions","headers","Accept","Authorization","btoa","username","createRoom","a","Object","assign","method","body","fetch","BASE_API_URL","response","json","payload","LoginHeader","Login","useState","user","setUser","loading","setLoading","paddingBottom","onSubmit","preventDefault","joinData","roomId","user_ref","then","catch","err","placeholder","onChange","target","value","required","defaultChecked","rel","onClick","createRoomApi","resp","room_id","color","App","exact","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3c9a171.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    useParams\n} from \"react-router-dom\";\nimport './room.css'\nlet EnxRtc = window.EnxRtc;\nlet EnxWb = window.EnxWb;\n\nexport default function Room(props) {\n    let canvasStarted = false;\n    let presentationStarted = false;\n    // Player Options\nlet player_options = {\n    \"player\": {\n        \"autoplay\": \"\",     // Enum: autoplay (default)\n        \"name\": \"\",         // Use stream.attributes.name preferably\n        \"nameDisplayMode\": \"\",  // Enum: auto (default), on, off\n        \"frameFitMode\": \"\", // Enum: bestFit (default), coverMax\n        \"skin\":\"default\",   // Enum: default (default)\n        \"class\": \"\"       // Custom CSS Class Name\n    },\n    toolbar: {\n        'displayMode': false,\n    }\n};\n    let { token } = useParams();\n    let ATList = [];\n    let audio_muted = false;\n    let video_muted = false;\n    let video_type = \"SD\";\n\n    let room = null;\n    let SubscribedStreamMap = new Map();\n    let localStream,\n        remote_view,\n        sAMute = true,\n        sVMute = true,\n        rAmute = true,\n        rVMute = true;\n\n    let optionsLocal;\n    let remoteOptions;\n    let isModerator;\n    let VideoSize = {\n        'HD': [320, 180, 1280, 720],\n        'SD': [640, 480, 640, 480],\n        'LD': [80, 45, 640, 360]\n    };\n    let config = {\n        video: true,\n        audio: true,\n        data: true,\n        videoSize: VideoSize[video_type],\n    };\n\n    optionsLocal = {\n        player: {\n            height: \"150px\",\n            width: \"150px\",\n            minHeight: \"150px\",\n            minWidth: \"150px\",\n        },\n        toolbar: {\n            displayMode: false,\n        },\n        resizer: false,\n    };\n    remoteOptions = {\n        player: {\n            height: \"100%\",\n            width: \"100%\",\n        },\n        resizer: false,\n        toolbar: {\n            displayMode: false,\n        },\n    };\n\n    useEffect(() => {\n        joinRoom()\n    }, []);\n\n\n    let enableMuteButton = (muteUnmuteBtn) => {\n        muteUnmuteBtn.removeAttribute(\"disabled\");\n        muteUnmuteBtn.style.cursor = \"pointer\";\n        muteUnmuteBtn.style.pointerEvents = \"auto\";\n    }\n\n\n    let joinRoom = () => {\n        console.log('joining the room...');\n        document.querySelector(\"#local_view\").classList.add(\"local_class_peep\");\n        document.querySelector(\"#remote_view\").classList.add(\"remote_class_peep\");\n        let muteUnmuteBtn = document.querySelector(\"#self_vMute\");\n        EnxRtc.Logger.setLogLevel(0);\n        localStream = EnxRtc.joinRoom(token, config, function (success, error) {\n\n            if (error && error == null) {\n                document.querySelector(\".error_div\").innerHTML = \"Room connection error.\" + error.message;\n            }\n            // if room connects successfully\n            if (success && success !== null) {\n\n                //play local view\n                localStream.play(\"self-view\", optionsLocal);\n\n                // assigning room object to a variable\n                room = success.room;\n\t\tconsole.log(\"roomsetting:\",success,success.room);\n                // check if the user joined as moderator or participant\n                isModerator = room.me.role === \"moderator\" ? true : false;\n                var ownId = success.publishId;\n                for (var i = 0; i < success.streams.length; i++) {\n                    room.subscribe(success.streams[i]);\n                }\n\t\t\n\n\n                // Active talkers handling\n                room.addEventListener(\"active-talkers-updated\", function (event) {\n                    console.log(\"Active Talker List :- \" + JSON.stringify(event));\n                    var video_player_len = document.querySelector(\"#call_div\").childNodes;\n\n                    ATList = event.message.activeList;\n\n                    if (\n                        event.message &&\n                        event.message !== null &&\n                        event.message.activeList &&\n                        event.message.activeList !== null\n                    ) {\n                        if (ATList.length === 0) {\n                            document.querySelector(\"#call_div\").innerHTML = \"\";\n                            document.querySelector(\".remote-name\").innerText = \"\";\n                        }\n                        if (SubscribedStreamMap.size > 0) {\n\n                            if (video_player_len.length >= 1) {\n                                return;\n                            } else {\n                                for (var stream in room.remoteStreams.getAll()) {\n                                    var st = room.remoteStreams.getAll()[stream];\n                                    for (var j = 0; j < ATList.length; j++) {\n                                        if (ATList[j].streamId === st.getID()) {\n                                            remote_view = st;\n                                            document.querySelector(\".self-name\").innerHTML = room.me.name;\n                                            st.play(\"call_div\", remoteOptions);\n                                            document.querySelector(\".remote-name\").innerHTML = ATList[j].name;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n\n\t\t\n                   room.addEventListener(\"canvas-started\",function(data){\n\t\t\tconsole.log(\"canvas-started\");\n                      if(data.message.clientId != room.me.clientId)\n                      {\n                        canvasStarted = true;\n                        presentationStarted = true;\n                        var stream_id = data.message.streamId;\n                        var st = room.remoteStreams.get(stream_id);\n                        st.play(\"canvasStreamPlayer\",player_options);\n                        document.querySelector(\"#canvasStreamPlayer\").style.border = \"1px solid red\";\n                      }\n\t\t});\n                      \n\n                // room recording start  notification\n                room.addEventListener(\"room-record-on\", function () {\n                    document.querySelector(\"#rec_notification\").style.display = 'block';\n                });\n                // room recording stop  notification\n                room.addEventListener(\"room-record-off\", function () {\n                    document.querySelector(\"#rec_notification\").style.display = 'none';\n                });\n\n                room.addEventListener(\"stream-subscribed\", function (streamEvent) {\n                    if (streamEvent.stream.getID() !== ownId) {\n                        SubscribedStreamMap.set(\n                            streamEvent.stream.getID(),\n                            streamEvent.stream\n                        );\n                    }\n                });\n\n\n                // user disconnection notification\n                room.addEventListener(\"user-disconnected\", function (streamEvent) {\n                    document.querySelector(\"#call_div\").innerHTML = \"\";\n                    document.querySelector(\".remote-name\").innerText = \"\";\n                });\n                // room disconnected notification\n                room.addEventListener(\"room-disconnected\", function (streamEvent) {\n                    window.location.href = \"/\";\n                });\n\n\n\n            }\n        });\n\n        // self stream audio mute/unmute  function\n        document.querySelector(\"#self_aMute\").addEventListener('click', function (e) {\n            if (audio_muted) {\n                if (room.mute) {\n                    console.log(\"Your audio is muted by moderator\");\n                } else {\n                    localStream.unmuteAudio(function (arg) {\n                        document.querySelector(\"#self_aMute\").classList.remove(\"fa-microphone-slash\");\n                        document.querySelector(\"#self_aMute\").classList.add(\"fa-microphone\");\n                        audio_muted = false;\n                    });\n                }\n            } else {\n                localStream.muteAudio(function (arg) {\n                    document.querySelector(\"#self_aMute\").classList.remove(\"fa-microphone\");\n                    document.querySelector(\"#self_aMute\").classList.add(\"fa-microphone-slash\");\n                    audio_muted = true;\n                });\n            }\n        });\n\n\t\n\t//Canvas streaming\n        document.querySelector(\"#whiteboard_btn\").addEventListener('click', function (e) {\n\t\tlet wb  =  new EnxWb(\n\t{\tcanvasId: 'wb', // id of the canvas \n\t\tinitialWidth: 1000,\n\t\tinitialHeight: 1000,\n\t\tscheme : 'custom',\n\t\tcustom: {\n\t\t\tbgColor : 'red',\t\t/* WB Backbround */\n\t\t\ttoolbarBGColor : 'black',\t/* Toolbar Background */\n\t\t\tbrushColor:'black',\t\t/* Default Brush Color */\n\t\t\ticon : {\t\t\t/* Toolbar Icon definition */\n\t\t\t\tsize: 'medium', /* Enum: small,large,medium */\n\t\t\t\ttype: 'rounded-square', /* Enum:  square,rounded-square */\n\t\t\t\tBGColor: '#f3f3f3',\t/* Tool Background */\n\t\t\t\tFGColor: '#000000',\t/* Tool Foreground */\n\t\t\t\tborder: '1px solid grey'/* Tool Border */\n\t\t\t}\n\t\t}\n\t}\n        \t);\n                    wb.create(room);\n\t\t   wb.startStreaming();\n\t\t   \n                    wb.startCollaboration();\n                   room.addEventListener(\"user-connected\",function(event){\n                       var clientId = event.clientId;\n                       wb.shareWith(clientId);\n                   })\n              console.log(\"Started\");\n        });\n\n\n\n\n        document.querySelector(\"#disconnect_call\").addEventListener(\"click\", function () {\n            room.disconnect();\n        });\n\n        document.querySelector('#mute_video').addEventListener('click', function () {\n            muteUnmuteBtn.style.cursor = \"wait\";\n            muteUnmuteBtn.style.pointerEvents = \"none\";\n            muteUnmuteBtn.disabled = true;\n            muteUnmuteBtn.setAttribute(\"disabled\", \"disabled\");\n\n            if (video_muted) {\n                localStream.unmuteVideo(function (res) {\n                    if (res.result === 0) {\n                        document.querySelector(\"#self_vMute\").classList.remove(\"fa-video-slash\");\n                        document.querySelector(\"#self_vMute\").classList.add(\"fa-video\");\n                        video_muted = false;\n                        enableMuteButton(muteUnmuteBtn);\n                    } else if (res.result === 1140) {\n                        console.error(res.error);\n                        enableMuteButton(muteUnmuteBtn);\n                    }\n                });\n            } else {\n                localStream.muteVideo(function (res) {\n                    if (res.result === 0) {\n                        document.querySelector(\"#self_vMute\").classList.remove(\"fa-video\");\n                        document.querySelector(\"#self_vMute\").classList.add(\"fa-video-slash\");\n                        video_muted = true;\n                        enableMuteButton(muteUnmuteBtn);\n                    } else if (res.result === 1140) {\n                        enableMuteButton(muteUnmuteBtn);\n                    }\n                });\n            }\n        });\n\n    }\n\n    return (\n        <div>\n            <div className=\"layout\">\n                <div id=\"overlay\" style={{ 'display': 'none' }}>\n                    <div className=\"loader\" style={{ \"width\": \"50px\" }}>\n                        <img src=\"./img/loading.gif\" alt=\"\" />\n                    </div>\n                </div>\n\n                <div className=\"container\" >\n                    <div className=\"row p-0 m-0\" id=\"call_container_div\">\n\t\t\t<div className=\"\">\n\t\t\t<div className=\"col-md-9\">\n\t\t\t    <div id=\"main-container\" className=\"enx-layout-container\">\n\t\t\t\t<canvas id=\"wb\"></canvas>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t\t<div className=\"col-md-3\">\n\t\t\t    <div id=\"canvasStreamPlayer\"></div>\n\t\t\t</div>\n\t\t    \t</div>\n\n                        <div className=\"local_class_peep\" id=\"local_view\">\n                            <div id=\"self-view\"></div>\n                            <div className=\"self-name\">Local User</div>\n                        </div>\n\n                        <div className=\"remote_class_peep\" id=\"remote_view\">\n                            <div id=\"call_div\"></div>\n                            <div id=\"show_stream_div\"></div>\n                            <div className=\"remote-name\">Remote User</div>\n                        </div>\n\n                        <div className=\"toolbar-buttons\">\n                            <div className=\"tools\">\n                                <div className=\"mute-icon\" id=\"mute_audio\" title=\"Mute/Unmute Audio\">\n                                    <i className=\"fa fa-microphone\" id=\"self_aMute\"></i>\n                                </div>\n                                <div className=\"video-mute-icon\" id=\"mute_video\" title=\"Mute/Unmute Video\">\n                                    <i className=\"fa fa-video\" id=\"self_vMute\"></i>\n                                </div>\n                                <div className=\"video-mute-icon\" id=\"whiteboard_btn\" title=\"Start Whiteboard\">\n                                    <i className=\"fa fa-desktop fa-fw SSicon\"></i>\n                                </div>\n                                {/* <div className=\"video-mute-icon\" id=\"toggle_chat\" title=\"Chat\">\n                                    <i className=\"fas fa-comment-dots fa-fw CBicon\" ></i>\n                                    <span className=\"tag tag-danger top\" id=\"chat-tag\">&nbsp;</span>\n                                </div> */}\n                                <div className=\"video-mute-icon end-call\" title=\"End Call\">\n                                    <i className=\"fas fa-phone fa-fw CBicon\" id=\"disconnect_call\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\n\n","\nconst BASE_API_URL = 'https://try.enablex.io/';\nconst username = 'demo';\nconst password = 'enablex';\n\nconst fetchOptions = {\n    headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: 'Basic ' + btoa(username + ':' + password)\n    }\n};\n\n/**\n * Create Room xhr request\n */\nexport const createRoom = async () => {\n    Object.assign(fetchOptions, {\n        method: \"POST\",\n        body: ''\n    });\n    const response = await fetch(BASE_API_URL + 'createRoom/', fetchOptions);\n    return await response.json();\n}\n\n\n/**\n * Join room method to make an xhr request to get new token\n */\nexport const joinRoom = async (payload) => {\n    Object.assign(fetchOptions, {\n        method: \"POST\",\n        body: JSON.stringify(payload)\n    });\n    const response = await fetch(BASE_API_URL + 'createToken/', fetchOptions);\n    return await response.json();\n}\n","import React from 'react'\n\nexport default function LoginHeader() {\n    return (\n        <header>\n            <div className=\"container\">\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <a className=\"navbar-brand\" href=\"https://www.enablex.io/\">\n                        <img src=\"./enableX_logo.png\" alt=\"EnableX\" />\n                    </a>\n                    <div className=\"navbar-collapse collapse nav justify-content-end\">\n                        <ul className=\"nav justify-content-end ton-hedr-nav\">\n                            <li className=\"nav-item\">\n                                <a href=\"#\" className=\"nav-link login text-dark\">Sample Code <span className='fa fa-code'></span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        </header>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { createRoom as createRoomApi, joinRoom } from '../service/api.js'\nimport LoginHeader from '../components/LoginHeader'\nimport './login.css'\n\nconst Login = (props) => {\n\n    const [user, setUser] = useState({ name: '', room: '', role: '' });\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const enterRoom = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        console.log('Enter room....');\n        let joinData = {\n            name: user.name,\n            role: user.role,\n            roomId: user.room,\n            user_ref: user.name,\n        };\n\n        joinRoom(joinData)\n            .then(response => {\n                window.location = \"/room/\" + response.token;\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    const createNewRoom = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        createRoomApi()\n            .then(resp => {\n                if (resp.result === 0) {\n                    setUser({ ...user, room: resp.room.room_id });\n                    setLoading(false);\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <main>\n            <LoginHeader />\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-center align-items-center\">\n                    <div className=\"col-12 col-md-12 col-xl-6 col-lg-6 form-hedding\">\n                        <h1>1-To-1 Video Call</h1>\n                        <p>This Sample Code showcases how EnableX Video Service may be used to create a 1-to-1 Video Call\n                        Application. The Login Screen explains all basic information is needed to get a EnableX Token to get\n                        you connected to a Live Video Session. You may need to create your Access Processes to give a\n                    EnableX Token to your User.</p>\n                        <h4>Tech Specs</h4>\n                        <p>\n                            <strong>Web Toolkit: </strong > v<span id=\"version_num\">1.5</span> <br />\n                            <strong>Client Application:</strong> HTML5, CSS, JavaScript <br />\n                            <strong>Application Server:</strong> NodeJS\n                            </p>\n                    </div>\n                    <div className=\"col-12 col-md-12 col-xl-5 col-lg-5 offset-md-1\">\n                        <div className=\"form-bg login_join_div\" style={{ display: 'block', paddingBottom: '25px' }}>\n                            <h2 className=\"text-center\">Start a Video Call</h2>\n                            <div style={{ display: 'none' }} className=\"loading text-center\">Loading....</div>\n                            <form className=\"mt-4\" id=\"login_form\" onSubmit={enterRoom}>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-12\">\n                                        <input type=\"text\" className=\"form-control\" id=\"nameText\" name=\"nameText\" placeholder=\"Name\"\n                                            onChange={e => setUser({ ...user, name: e.target.value })}\n                                            value={user.name}\n                                            required />\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-12\">\n                                        <input type=\"text\" className=\"form-control\" id=\"roomName\" name=\"roomName\"\n                                            onChange={e => setUser({ ...user, room: e.target.value })}\n                                            value={user.room}\n                                            placeholder=\"Room ID\" required />\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-12\">\n                                        <select className=\"selectpicker show-menu-arrow form-control\" id=\"attendeeRole\"\n                                            onChange={e => setUser({ ...user, role: e.target.value })}\n                                            value={user.role}\n                                            name=\"attendeeRole\" required>\n                                            <option value=\"\">Select Role</option>\n                                            <option value=\"participant\">Join as Participant</option>\n                                            <option value=\"moderator\">Join as Moderator</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-12\">\n                                        <input type=\"checkbox\" name=\"agree\" style={{ height: '15px', width: '15px' }} defaultChecked required />\n                                        <label>I\n                                    agree to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.enablex.io/legals/tou/\">Terms of\n                                        Use</a> and\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                                href=\"https://www.enablex.io/legals/privacy-policy/\">Privacy Policy</a>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"form-row justify-content-start\">\n                                    <div className=\"form-group col-12 checkbox-sec\">\n                                        <div>\n                                            <div>\n                                                {/* <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" id=\"joinRoom\" /> */}\n\n                                                <button className=\"btn btn-primary\" id=\"joinRoom\">\n                                                    {loading ? 'Wait...' : 'Sign In'}\n                                                </button>\n\n                                            </div>\n                                            <div id=\"create_room_div\">\n                                                <hr />\n                                                <p className=\"text-center\">\n                                                    Don't have a Room-ID?\n                                                        <a href=\"#\" onClick={createNewRoom} id=\"create_room\">\n                                                        {loading ? 'Wait...' : 'Create One'}\n\n                                                    </a>\n                                                </p>\n                                            </div>\n                                            <br />\n                                            <span id=\"message\" style={{ color: 'red' }}></span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6\">\n                            <ul className=\"footerUl\">\n                                <li><a href=\"https://www.enablex.io/legals/tou/\">Terms</a></li>\n                                <li><a href=\"https://www.enablex.io/legals/privacy-policy/\">Privacy Policy</a></li>\n                            </ul>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <p className=\"footer-p\">Copyright © VCLOUDX PTE LTD. All rights reserved.</p>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </main>\n    )\n}\n\nexport default Login\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Room from \"./pages/Room\";\nimport Login from \"./pages/Login\";\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Route path=\"/room/:token\" children={<Room />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}